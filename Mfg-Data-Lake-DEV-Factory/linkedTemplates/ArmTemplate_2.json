{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Mfg-Data-Lake-DEV-Factory"
		},
		"CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_SourceFileFolder": {
			"type": "string",
			"defaultValue": "inbound"
		},
		"CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_SourceFileDirectory": {
			"type": "string",
			"defaultValue": "staged"
		},
		"CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_DestinationFileFolder": {
			"type": "string",
			"defaultValue": "adls"
		},
		"CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_DestinationFileDirectory": {
			"type": "string",
			"defaultValue": "inbound"
		},
		"trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_SourceFileFolder": {
			"type": "string",
			"defaultValue": "adls"
		},
		"trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_SourceFileDirectory": {
			"type": "string",
			"defaultValue": "outbound"
		},
		"trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_DestinationFileFolder": {
			"type": "string",
			"defaultValue": "outbound"
		},
		"trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_DestinationFileDirectory": {
			"type": "string",
			"defaultValue": "staged"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFiles_from_adls_toprem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scan the file path on your source storage store and get the container list.",
				"activities": [
					{
						"name": "EnumerateContainersList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinarySourceFileStore2",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.SourceFileFolder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.SourceFileDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachContainer",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "EnumerateContainersList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('EnumerateContainersList').output.childItems",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "CopyOneContainer",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "FileServerWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BinarySourceFileStore2",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.SourceFileFolder",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(pipeline().parameters.SourceFileDirectory,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinarySinkFileStore2",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": {
													"value": "@pipeline().parameters.DestinationFileFolder",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(pipeline().parameters.DestinationFileDirectory,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"SourceFileFolder": {
						"type": "string",
						"defaultValue": "adls"
					},
					"SourceFileDirectory": {
						"type": "string",
						"defaultValue": "outbound"
					},
					"DestinationFileFolder": {
						"type": "string",
						"defaultValue": "outbound"
					},
					"DestinationFileDirectory": {
						"type": "string",
						"defaultValue": "staged"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFilesfromMultipleContainers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scan the file path on your source storage store and get the container list.",
				"activities": [
					{
						"name": "EnumerateContainersList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinarySourceFileStore1",
								"type": "DatasetReference",
								"parameters": {
									"folderPath": {
										"value": "@pipeline().parameters.SourceFileFolder",
										"type": "Expression"
									},
									"directory": "@pipeline().parameters.SourceFileDirectory"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachContainer",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "EnumerateContainersList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('EnumerateContainersList').output.childItems",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "CopyOneContainer",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "BinarySourceFileStore1",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "@pipeline().parameters.SourceFileFolder",
												"directory": "@concat(pipeline().parameters.SourceFileDirectory,'/',item().name)"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinarySinkFileStore",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.DestinationFileFolder",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(pipeline().parameters.DestinationFileDirectory,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteActivity",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyOneContainer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinarySourceFileStore1",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": "@pipeline().parameters.SourceFileFolder",
												"directory": "@concat(pipeline().parameters.SourceFileDirectory,'/',item().name)"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "onsemidevmdlstoragelink",
												"type": "LinkedServiceReference"
											},
											"path": "adls/inbound/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"wildcardFileName": "*.*"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceFileFolder": {
						"type": "string",
						"defaultValue": "inbound"
					},
					"SourceFileDirectory": {
						"type": "string",
						"defaultValue": "staged"
					},
					"DestinationFileFolder": {
						"type": "string",
						"defaultValue": "adls"
					},
					"DestinationFileDirectory": {
						"type": "string",
						"defaultValue": "inbound"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeCSVToParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MergeCSV_to_Parquet",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MergeCSV_to_Parquet",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "sandbox"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RecursiveConvertCSVToParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scan the file path on your source storage store and get the container list.",
				"activities": [
					{
						"name": "EnumerateContainersList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinarySourceFileStore3",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.SourceFileFolder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.SourceFileDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachContainer",
						"description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "EnumerateContainersList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('EnumerateContainersList').output.childItems",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "CopyOneContainer",
									"description": "Copy each container from source storage store to destination store.",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "DataFlowForCSVMergeToParquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat(pipeline().parameters.SourceFileDirectory,'/',item().name)",
													"type": "Expression"
												},
												"wildcardFileName": "*.parquet",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BinarySourceFileStore3",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.SourceFileFolder",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(pipeline().parameters.SourceFileDirectory,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinarySinkFileStore3",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.DestinationFileFolder",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(pipeline().parameters.DestinationFileDirectory,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DataFlowForCSVMergeToParquet",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DataFlowForCSVMergeToParquet",
											"type": "DataFlowReference",
											"parameters": {
												"recursiveInputPath": {
													"value": "'@{concat(pipeline().parameters.SourceFileDirectory,'/',item().name)}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SourceFileFolder": {
						"type": "string",
						"defaultValue": "adls"
					},
					"SourceFileDirectory": {
						"type": "string",
						"defaultValue": "translated\\csv\\site\\USR\\FDC\\Tools\\ASH10653"
					},
					"DestinationFileFolder": {
						"type": "string",
						"defaultValue": "adls"
					},
					"DestinationFileDirectory": {
						"type": "string",
						"defaultValue": "translated\\parquet\\site\\USR\\FDC\\Tools\\ASH10653"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyfromDBtoParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RecordID",
											"type": "Int32"
										},
										"sink": {
											"name": "RecordID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lot",
											"type": "String"
										},
										"sink": {
											"name": "Lot",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ActualShipDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ActualShipDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MainQty",
											"type": "Int32"
										},
										"sink": {
											"name": "MainQty",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ShipFixUp",
											"type": "Int32"
										},
										"sink": {
											"name": "ShipFixUp",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "fabtimshipment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "mfgdlparquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "sandbox"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyEvery5Mins')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyFilesfromMultipleContainers",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceFileFolder": "[parameters('CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_SourceFileFolder')]",
							"SourceFileDirectory": "[parameters('CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_SourceFileDirectory')]",
							"DestinationFileFolder": "[parameters('CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_DestinationFileFolder')]",
							"DestinationFileDirectory": "[parameters('CopyEvery5Mins_properties_CopyFilesfromMultipleContainers_parameters_DestinationFileDirectory')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2020-05-12T21:36:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyFilesfromMultipleContainers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_copyadlstoonprem')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyFiles_from_adls_toprem",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceFileFolder": "[parameters('trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_SourceFileFolder')]",
							"SourceFileDirectory": "[parameters('trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_SourceFileDirectory')]",
							"DestinationFileFolder": "[parameters('trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_DestinationFileFolder')]",
							"DestinationFileDirectory": "[parameters('trigger_copyadlstoonprem_properties_CopyFiles_from_adls_toprem_parameters_DestinationFileDirectory')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2020-07-16T15:59:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyFiles_from_adls_toprem')]"
			]
		}
	]
}